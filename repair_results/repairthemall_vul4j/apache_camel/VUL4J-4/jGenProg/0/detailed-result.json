{"general":{"NR_RIGHT_COMPILATIONS":3,"NR_ERRONEOUS_VARIANCES":null,"EXECUTION_IDENTIFIER":"apache_camel-VUL4J-4","OUTPUT_STATUS":"STOP_BY_PATCH_FOUND","NR_FAILLING_COMPILATIONS":null,"NR_GENERATIONS":3,"TOTAL_TIME":1242.639,"NR_FAILING_VALIDATION_PROCESS":null},"patches":[{"VARIANT_ID":"6","VALIDATION":"|true|0|0|[]|","patchhunks":[{"LOCATION":"org.apache.camel.builder.xml.XPathBuilder","PATH":"\\\/workdir\\\/jGenProg_vul4j_apache_camel_VUL4J-4\\\/camel-core\\\/src\\\/main\\\/java\\\/org\\\/apache\\\/camel\\\/builder\\\/xml\\\/XPathBuilder.java","INGREDIENT_SCOPE":"LOCAL","SUSPICIOUNESS":"1","INGREDIENT_PARENT":"if (propertiesFunction == null) {\\n\\tpropertiesFunction = createPropertiesFunction();\\n}","PATCH_HUNK_TYPE":"CtIfImpl|CtBlockImpl","ORIGINAL_CODE":"if (answer == null) {\\n\\n\\tif (body instanceof org.apache.camel.WrappedFile) {\\n\\n\\t\\tjava.io.InputStream is = exchange.getContext().getTypeConverter().convertTo(java.io.InputStream.class, exchange, body);\\n\\t\\tanswer = new org.xml.sax.InputSource(is);\\n\\t} else if (body instanceof org.apache.camel.component.bean.BeanInvocation) {\\n\\n\\t\\torg.apache.camel.component.bean.BeanInvocation bi = exchange.getContext().getTypeConverter().convertTo(org.apache.camel.component.bean.BeanInvocation.class, exchange, body);\\n\\t\\tif (((bi.getArgs() != null) && (bi.getArgs().length == 1)) && (bi.getArgs()[0] == null)) {\\n\\n\\t\\t\\tanswer = null;\\n\\t\\t}\\n\\t} else if (body instanceof java.lang.String) {\\n\\t\\tanswer = new org.xml.sax.InputSource(new java.io.StringReader(((java.lang.String) (body))));\\n\\t}\\n}","BUGGY_CODE_TYPE":"CtIfImpl|CtBlockImpl","OPERATOR":"ReplaceOp","MODIFIED_FILE_PATH":"\\\/workdir\\\/jGenProg_vul4j_apache_camel_VUL4J-4\\\/.\\\/output_astor\\\/AstorMain-apache_camel-VUL4J-4\\\/\\\/src\\\/\\\/variant-6\\\/org\\\/apache\\\/camel\\\/builder\\\/xml\\\/XPathBuilder.java","LINE":"1117","MP_RANKING":"0","PATCH_HUNK_CODE":"if (propertiesFunction == null) {\\n\\tpropertiesFunction = createPropertiesFunction();\\n}"}],"TIME":"1242","GENERATION":"3","FOLDER_SOLUTION_CODE":"\\\/workdir\\\/jGenProg_vul4j_apache_camel_VUL4J-4\\\/.\\\/output_astor\\\/AstorMain-apache_camel-VUL4J-4\\\/\\\/src\\\/\\\/variant-6","PATCH_DIFF_ORIG":"--- \\\/workdir\\\/jGenProg_vul4j_apache_camel_VUL4J-4\\\/camel-core\\\/src\\\/main\\\/java\\\/org\\\/apache\\\/camel\\\/builder\\\/xml\\\/XPathBuilderjava\\n+++ \\\/workdir\\\/jGenProg_vul4j_apache_camel_VUL4J-4\\\/camel-core\\\/src\\\/main\\\/java\\\/org\\\/apache\\\/camel\\\/builder\\\/xml\\\/XPathBuilderjava\\n@@ -1117 +1116,0 @@\\n-\\t\\tif (answer == null) {\\n@@ -1119 +1117,0 @@\\n-\\t\\t\\tif (body instanceof org.apache.camel.WrappedFile) {\\n@@ -1121,58 +1119,60 @@\\n-\\t\\t\\t\\tjava.io.InputStream is = exchange.getContext().getTypeConverter().convertTo(java.io.InputStream.class, exchange, body);\\n-\\t\\t\\t\\tanswer = new org.xml.sax.InputSource(is);\\n-\\t\\t\\t} else if (body instanceof org.apache.camel.component.bean.BeanInvocation) {\\n-\\n-\\t\\t\\t\\torg.apache.camel.component.bean.BeanInvocation bi = exchange.getContext().getTypeConverter().convertTo(org.apache.camel.component.bean.BeanInvocation.class, exchange, body);\\n-\\t\\t\\t\\tif (((bi.getArgs() != null) && (bi.getArgs().length == 1)) && (bi.getArgs()[0] == null)) {\\n-\\n-\\t\\t\\t\\t\\tanswer = null;\\n-\\t\\t\\t\\t}\\n-\\t\\t\\t} else if (body instanceof java.lang.String) {\\n-\\t\\t\\t\\tanswer = new org.xml.sax.InputSource(new java.io.StringReader(((java.lang.String) (body))));\\n-\\t\\t\\t}\\n-\\t\\t}\\n-\\n-\\t\\tif ((type == null) && (answer == null)) {\\n-\\n-\\t\\t\\tanswer = body;\\n-\\t\\t} else if (answer == null) {\\n-\\n-\\t\\t\\tif (cause != null) {\\n-\\t\\t\\t\\tthrow cause;\\n-\\t\\t\\t} else {\\n-\\t\\t\\t\\tthrow new org.apache.camel.NoTypeConversionAvailableException(body, type);\\n-\\t\\t\\t}\\n-\\t\\t}\\n-\\n-\\t\\treturn answer;\\n-\\t}\\n-\\n-\\tprivate org.apache.camel.builder.xml.MessageVariableResolver getVariableResolver() {\\n-\\t\\treturn variableResolver;\\n-\\t}\\n-\\n-\\t@java.lang.Override\\n-\\tpublic void doStart() throws java.lang.Exception {\\n-\\t\\tif (xpathFactory == null) {\\n-\\t\\t\\txpathFactory = createXPathFactory();\\n-\\t\\t}\\n-\\t\\tif (namespaceContext == null) {\\n-\\t\\t\\tnamespaceContext = createNamespaceContext(xpathFactory);\\n-\\t\\t}\\n-\\t\\tfor (java.util.Map.Entry<java.lang.String, java.lang.String> entry : namespaces.entrySet()) {\\n-\\t\\t\\tnamespaceContext.add(entry.getKey(), entry.getValue());\\n-\\t\\t}\\n-\\n-\\n-\\t\\tif (bodyFunction == null) {\\n-\\t\\t\\tbodyFunction = createBodyFunction();\\n-\\t\\t}\\n-\\t\\tif (headerFunction == null) {\\n-\\t\\t\\theaderFunction = createHeaderFunction();\\n-\\t\\t}\\n-\\t\\tif (outBodyFunction == null) {\\n-\\t\\t\\toutBodyFunction = createOutBodyFunction();\\n-\\t\\t}\\n-\\t\\tif (outHeaderFunction == null) {\\n-\\t\\t\\toutHeaderFunction = createOutHeaderFunction();\\n-\\t\\t}\\n+\\n+\\n+\\n+\\n+\\n+\\n+\\n+\\n+\\n+\\n+\\n+\\n+\\n+\\n+\\n+\\n+\\n+\\n+\\n+\\n+\\n+\\n+\\n+\\n+\\n+\\n+\\n+\\n+\\n+\\n+\\n+\\n+\\n+\\n+\\n+\\n+\\n+\\n+\\n+\\n+\\n+\\n+\\n+\\n+\\n+\\n+\\n+\\n+\\n+\\n+\\n+\\n+\\n+\\n+\\n+\\n+\\n+\\n+\\n+\\n@@ -1181 +1181 @@\\n-\\t\\t}\\n+\\t\\t} \\t\\tif ((type == null) && (answer == null)) { \\t\\t\\tanswer = body;} else if (answer == null) { \\t\\t\\tif (cause != null) { \\t\\t\\t\\tthrow cause;} else { \\t\\t\\t\\tthrow new org.apache.camel.NoTypeConversionAvailableException(body, type);}} \\t\\treturn answer;} \\tprivate org.apache.camel.builder.xml.MessageVariableResolver getVariableResolver() { \\t\\treturn variableResolver;} \\t@java.lang.Override \\tpublic void doStart() throws java.lang.Exception { \\t\\tif (xpathFactory == null) { \\t\\t\\txpathFactory = createXPathFactory();} \\t\\tif (namespaceContext == null) { \\t\\t\\tnamespaceContext = createNamespaceContext(xpathFactory);} \\t\\tfor (java.util.Map.Entry<java.lang.String, java.lang.String> entry : namespaces.entrySet()) { \\t\\t\\tnamespaceContext.add(entry.getKey(), entry.getValue());} \\t\\tif (bodyFunction == null) { \\t\\t\\tbodyFunction = createBodyFunction();} \\t\\tif (headerFunction == null) { \\t\\t\\theaderFunction = createHeaderFunction();} \\t\\tif (outBodyFunction == null) { \\t\\t\\toutBodyFunction = createOutBodyFunction();} \\t\\tif (outHeaderFunction == null) { \\t\\t\\toutHeaderFunction = createOutHeaderFunction();} \\t\\tif (propertiesFunction == null) { \\t\\t\\tpropertiesFunction = createPropertiesFunction();}\\n\\n"}]}